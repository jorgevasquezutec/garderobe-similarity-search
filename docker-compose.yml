version: '3'
services:
  app:
      build:
        context: .
        dockerfile: Dockerfile
      image: garderobe
      ports:
        - "5000:5000"
      volumes:
        - ./:/app
      networks:
        - garderobe_network
      environment:
        API_TITLE: ${API_TITLE}
        API_PORT: ${API_PORT}
        API_LOG_LEVEL: ${API_LOG_LEVEL}
        API_SECRET_KEY: ${API_SECRET_KEY}
        MONGO_URI: ${MONGO_URI}
        MONGO_DATABASE : ${MONGO_DATABASE}
        MONGO_COLLECTION : ${MONGO_COLLECTION}
        AWS_S3_ACCESS_KEY_ID :  ${AWS_S3_ACCESS_KEY_ID}
        AWS_S3_SECRET_ACCESS_KEY : ${AWS_S3_SECRET_ACCESS_KEY}
        AWS_S3_BUCKET_NAME : ${AWS_S3_BUCKET_NAME}
        ACCESS_TOKEN_EXPIRE_MINUTES : ${ACCESS_TOKEN_EXPIRE_MINUTES}
        MODEL_URL : ${MODEL_URL}
        IMAGE_WIDTH : ${IMAGE_WIDTH}
        IMAGE_HEIGHT : ${IMAGE_HEIGHT}
        FEAUTRE_LENGTH: ${FEAUTRE_LENGTH}
  mongodb:
    image: mongo:4.4.6
    container_name: mongodb-garderobe
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: garderobe
    volumes:
      - mongodb-garderobe-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - garderobe_network
    ports:
      - 27018:27017

volumes:
  mongodb-garderobe-data:
    driver: local

networks:
  garderobe_network:
    driver: bridge
